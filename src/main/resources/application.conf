akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "INFO"

  actor {
    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
    }
  }
  remote {
    # The port clients should connect to. Default is 2552.
    #netty.tcp.port = 4711
  }
}

http {
  interface = "0.0.0.0"
  port = 8080
}

health {
  disk {
    threshold = 450//10485760 //10 * 1024 * 1024
  }
}

info {
  app {
    name = YMLD Akka Http Microservice Application
    description = Akka Http Microserivce Demo Application
    version = 1.0.0
    environment = Development
  }
}

db {
  driver = "slick.driver.DerbyDriver$"
  db = {
    url = "jdbc:derby://localhost:1527/home/havard/Derby/databases/YMLD;create=true;user=APP;password=APP"
    driver = org.apache.derby.jdbc.ClientDriver
    connectionPool = enabled
    keepAliveConnection = true
  }
}

derby = {
  url = "jdbc:derby://localhost:1527/home/havard/Derby/databases/YMLD;create=true;user=APP;password=APP"
  driver = org.apache.derby.jdbc.ClientDriver
  //connectionPool = enabled
  keepAliveConnection = true
}




